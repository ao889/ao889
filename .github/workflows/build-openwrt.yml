name: Build OpenWrt

on:
  workflow_dispatch:
    inputs:
      debug_enabled:
        type: boolean
        description: 'Run the build with tmate debugging enabled'
        required: false
        default: false
      add_plugin:
        type: boolean
        description: 'Build with some plugins'
        required: false
        default: true
  schedule:
    - cron: 0 20 * * *

env:
  REPO_URL: https://github.com/openwrt/openwrt
  REPO_BRANCH: openwrt-22.03
  CONFIG_FILE: openwrt.config
  INIT_FILE: 99-default-settings
  DIY_SCRIPT: diy.sh
  PACKIT_SCRIPT: modify_packit.sh
  TZ: Asia/Shanghai

jobs:
  Build:
    runs-on: ubuntu-latest
    
    steps:

    - name: Delete older workflow runs and artifacts
      if: success()
      uses: Mattraks/delete-workflow-runs@v2
      with:
        token: ${{ secrets.RELEASES_TOKEN }}
        repository: ${{ github.repository }}
        retain_days: 3
        keep_minimum_runs: 3

    - name: Checkout
      uses: actions/checkout@main

    - name: Check Server Performance
      run: |
        echo "警告⚠"
        echo "分配的服务器性能有限，若选择的插件过多，务必注意CPU性能！"
        echo -e "已知CPU型号（降序）：8370C，8272CL，8171M，E5-2673 \n"
        echo "--------------------------CPU信息--------------------------"
        echo "CPU物理数量：$(cat /proc/cpuinfo | grep "physical id" | sort | uniq | wc -l)"
        echo -e "CPU核心信息：$(cat /proc/cpuinfo | grep name | cut -f2 -d: | uniq -c) \n"
        echo "--------------------------内存信息--------------------------"
        echo "已安装内存详细信息："
        echo -e "$(sudo lshw -short -C memory | grep GiB) \n"
        echo "--------------------------硬盘信息--------------------------"
        echo "硬盘数量：$(ls /dev/sd* | grep -v [1-9] | wc -l)" && df -hT

    - name: Initialization Environment
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        sudo rm -rf /etc/apt/sources.list.d/* /usr/share/dotnet /etc/mysql /usr/local/lib/android
        sudo -E apt-get -qq update
        sudo -E apt-get -qq install $(curl -fsSL is.gd/depends_ubuntu_2204)
        sudo -E apt-get -qq install fuse libfuse-dev
        sudo -E apt-get -qq autoremove --purge
        sudo -E apt-get -qq clean
        sudo timedatectl set-timezone "$TZ"

    - name: Clone Source Code
      run: |
        df -hT $GITHUB_WORKSPACE
        mkdir upload
        echo "UPLOAD_PATH=$GITHUB_WORKSPACE/upload" >> $GITHUB_ENV
        git clone --depth=1 -b $REPO_BRANCH $REPO_URL openwrt
        cd openwrt
        echo "OPENWRT_PATH=$PWD" >> $GITHUB_ENV
        KERNEL_VERSION_NAME=$(curl -fsSL https://api.github.com/repos/ophub/kernel/releases/latest | grep name | awk 'END{print}' | awk -F '"' '{print $4}' | awk -F '.tar.gz' '{print $1}')
        echo "KERNEL_VERSION_NAME=$KERNEL_VERSION_NAME" >> $GITHUB_ENV

    - name: Install Feeds
      run: |
        cd $OPENWRT_PATH
        ./scripts/feeds update -a
        ./scripts/feeds install -a

    - name: Setup Plugin Tag
      if: ${{ github.event_name != 'workflow_dispatch' || inputs.add_plugin }}
      run: |
        echo "ADD_PLUGIN=true" >> $GITHUB_ENV

    - name: Load Custom Configuration
      run: |
        [ -e $CONFIG_FILE ] && mv $CONFIG_FILE $OPENWRT_PATH/.config
        chmod +x $DIY_SCRIPT
        cd $OPENWRT_PATH
        $GITHUB_WORKSPACE/$DIY_SCRIPT

    - name: Download DL Package
      run: |
        cd $OPENWRT_PATH
        make defconfig
        make download -j8
        find dl -size -1024c -exec ls -l {} \;
        find dl -size -1024c -exec rm -f {} \;

    - name: Setup tmate session
      uses: mxschmitt/action-tmate@v3
      if: ${{ github.event_name == 'workflow_dispatch' && inputs.debug_enabled }}

    - name: Generate Variables
      run: |
        cd $OPENWRT_PATH
        DEVICE_TARGET=$(cat .config | grep CONFIG_TARGET_BOARD | awk -F '"' '{print $2}')
        echo "DEVICE_TARGET=$DEVICE_TARGET" >> $GITHUB_ENV
        DEVICE_SUBTARGET=$(cat .config | grep CONFIG_TARGET_SUBTARGET | awk -F '"' '{print $2}')
        echo "DEVICE_SUBTARGET=$DEVICE_SUBTARGET" >> $GITHUB_ENV

    - name: Generate Firmware
      run: |
        cd $OPENWRT_PATH
        mkdir -p files/etc/uci-defaults
        cp $GITHUB_WORKSPACE/$INIT_FILE files/etc/uci-defaults
        make -j$(nproc) || make -j1 || make -j1 V=s

    - name: Check Space Usage
      if: always()
      run: |
        df -hT
        echo "TIME=$(date +"%Y-%m-%d %H:%M:%S")" >> $GITHUB_ENV
        echo "DATE=$(date +"%Y.%m.%d")" >> $GITHUB_ENV

    - name: Organize Files
      if: success()
      run: |
        cd $OPENWRT_PATH/bin/targets/$DEVICE_TARGET/$DEVICE_SUBTARGET
        cat sha256sums
        ROOTFS_PATH=openwrt/bin/targets/$DEVICE_TARGET/$DEVICE_SUBTARGET/openwrt-$DEVICE_TARGET-$DEVICE_SUBTARGET-default-rootfs.tar.gz
        echo "ROOTFS_PATH=$ROOTFS_PATH" >> $GITHUB_ENV
        cp $OPENWRT_PATH/.config $UPLOAD_PATH/build.config

    - name: Package OpenWrt Firmware
      if: success()
      env:
        OPENWRT_ARMVIRT: ${{ env.ROOTFS_PATH }}
        KERNEL_REPO_URL: ysx88/OpenWrt
        KERNEL_VERSION_NAME: ${{ env.KERNEL_VERSION_NAME }}
        KERNEL_AUTO_LATEST: true
        PACKAGE_SOC: s905d
        WHOAMI: TIAmo
        DISTRIB_REVISION: R${{ env.DATE }} by TIAmo
        GH_TOKEN: ${{ secrets.RELEASES_TOKEN }}
      run: |
        wget https://raw.githubusercontent.com/unifreq/openwrt_packit/master/openwrt_flippy.sh
        chmod +x openwrt_flippy.sh
        sed -i "22asource $PACKIT_SCRIPT" openwrt_flippy.sh
        sed -i '/git clone --depth 1/a\    cd ${SELECT_PACKITPATH}\n    modify_packit\n    cd ..' openwrt_flippy.sh
        ./openwrt_flippy.sh

    - name: Upload OpenWrt To Release
      if: env.PACKAGED_STATUS == 'success'
      uses: ncipollo/release-action@v1
      with:
        allowUpdates: true
        removeArtifacts: true
        tag: v${{ env.DATE }}
        token: ${{ secrets.RELEASES_TOKEN }}
        artifacts: ${{ env.PACKAGED_OUTPUTPATH }}/*,${{ env.UPLOAD_PATH }}/*
        body: |
          默认IP：192.168.71.4 默认密码： password

          全新刷入emmc方法：
          固件刷入U盘。
          openwrt-install-amlogic
          拔掉U盘，断电重启。

          在线升级方法：
          上传 img 到/mnt/mmcblk2p4
          openwrt-update-amlogic
        
    - name: Remove old Releases
      uses: dev-drprasad/delete-older-releases@v0.2.1
      if: success()
      with:
        keep_latest: 3
        delete_tags: true
      env:
        GITHUB_TOKEN: ${{ secrets.RELEASES_TOKEN }}
